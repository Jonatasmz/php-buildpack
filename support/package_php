#/usr/bin/env bash

set -e

basedir="$( cd -P "$( dirname "$0" )" && pwd )"
source "$basedir/../conf/buildpack.conf"
source "$basedir/lib/utils"
source "$basedir/lib/swift"

export PATH=${basedir}/../vendor/bin:$PATH

if [ -z "$1" ]; then
    echo "Usage: $0 <version>" >&2
    exit 1
fi

php_version="$1"
mcrypt_version="2.5.8"

if [ -z "$PHP_ZLIB_VERSION" ]; then
    PHP_ZLIB_VERSION=1.2.8
fi

echo "-----> Packaging PHP $php_version"

tempdir=$(mktmpdir php)
cd $tempdir

echo "-----> Downloading dependency zlib ${PHP_ZLIB_VERSION}"

curl -LO "${SWIFT_URL}/zlib/zlib-${PHP_ZLIB_VERSION}.tar.gz"
tar -xzvf "zlib-${PHP_ZLIB_VERSION}.tar.gz"

echo "-----> Downloading PHP $php_version"
curl -LO "http://php.net/distributions/php-${php_version}.tar.gz"
tar -xzvf "php-${php_version}.tar.gz"

install_zend_optimizer=":"

if [[ "$php_version" =~ 5.[34].[0-9]+ ]]; then
    install_zend_optimizer=$(cat <<SH
    /app/vendor/php/bin/pecl install ZendOpcache-beta \
        && echo "zend_extension=\$(/app/vendor/php/bin/php-config --extension-dir)/opcache.so" >> /app/vendor/php/etc/conf.d/opcache.ini
SH
)
else
    install_zend_optimizer=$(cat <<SH
    echo "zend_extension=opcache.so" >> /app/vendor/php/etc/conf.d/opcache.ini
SH
)
fi

# Small hack to find FreeType dependency with ubuntu Trusty
if [ ! -d "/usr/include/freetype2/freetype" ] ; then
  mkdir /usr/include/freetype2/freetype
  cp /usr/include/freetype2/*.h /usr/include/freetype2/freetype
fi

mkdir -p "/app/vendor/php/zlib" "/app/vendor/libmcrypt" \
&& curl "${SWIFT_URL}/package/libmcrypt-${mcrypt_version}.tgz" | tar xzv -C /app/vendor/libmcrypt \
&& mkdir -p "/app/vendor/php/etc/conf.d" \
&& pushd zlib-${PHP_ZLIB_VERSION} >/dev/null && ./configure --prefix=/app/vendor/php/zlib && make && make install && popd > /dev/null \
&& pushd php-${php_version} >/dev/null \
&& ./configure --prefix=/app/vendor/php \
--with-config-file-path=/app/vendor/php/etc \
--with-config-file-scan-dir=/app/vendor/php/etc/conf.d \
--enable-intl \
--with-gd \
--with-mysql \
--with-mysqli \
--with-pdo-mysql \
--with-pdo-sqlite \
--with-pdo-pgsql=/usr/bin/pg_config \
--with-pgsql \
--enable-shmop \
--enable-zip \
--with-jpeg-dir=/usr \
--with-png-dir=/usr \
--with-freetype-dir=/usr \
--enable-exif \
--with-zlib=/app/vendor/php/zlib \
--with-bz2 \
--with-openssl \
--enable-soap \
--enable-xmlreader \
--with-xmlrpc \
--with-curl \
--with-xsl \
--enable-fpm \
--enable-mbstring \
--enable-pcntl \
--enable-sockets \
--enable-bcmath \
--with-readline \
--with-mcrypt=/app/vendor/libmcrypt \
--disable-debug \
--disable-phpdbg \
--enable-fpm \
--with-bz2 \
--with-curl \
--with-pdo-mysql \
--with-mysqli \
--with-openssl \
    --with-kerberos \
--with-pgsql \
--with-pdo-pgsql \
--with-readline \
--enable-sockets \
--enable-zip \
--with-zlib \
--enable-bcmath=shared \
--enable-calendar=shared \
--enable-exif=shared \
--enable-ftp=shared \
--with-gd=shared \
    --enable-gd-native-ttf \
    --with-freetype-dir=/usr \
    --with-jpeg-dir=/usr \
    --with-png-dir=/usr \
--with-gettext=shared,${OUT_PREFIX} \
--with-gmp=shared \
--with-imap=shared,${OUT_PREFIX}/opt/imap-2007f \
    --with-imap-ssl \
--enable-intl=shared \
--with-ldap=shared \
    --with-ldap-sasl \
--enable-mbstring=shared \
--enable-pcntl=shared \
--enable-shmop=shared \
--enable-soap=shared \
--with-sqlite3=shared \
--with-pdo-sqlite=shared \
--with-xmlrpc=shared \
--with-xsl=shared \
&& echo ${php_version} | grep ^5.3 && sed -i '/^BUILD_/ s/\$(CC)/\$(CXX)/g' Makefile || true \
&& make \
&& make install \
&& popd > /dev/null \
&& /app/vendor/php/bin/pear config-set php_dir /app/vendor/php \
&& $install_zend_optimizer

mkdir package
pushd /app/vendor/php > /dev/null
tar zcvf "${tempdir}/package/php-${php_version}.tgz" .
popd > /dev/null

echo "-----> Moving package to Swift"

swift_upload "package/php-${php_version}.tgz"

"$basedir/manifest" php
"$basedir/package-checksum" "php-${php_version}"

echo "-----> Done building PHP package!"
